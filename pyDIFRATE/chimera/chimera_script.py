try:
	from chimerax.core.commands import run as rc

	import os
	import numpy as np

	di=np.array([0,1,2,3,4,5,6,7,8,9,\
		10,11,12,13,14,15,16,17,18,19,\
		20,21,22,23,24,25,26,27,28,29,\
		30,31,32,33,34,35,36,37,38,39,\
		40,41,42,43,44,45,46,47,48,49,\
		50,51,52,53,54,55,56,57,58,59,\
		60,61,62,63,64,65,66,67,68,69,\
		70,71,72,73,74,75,76,77,78,79,\
		80,81,82,83,84,85,86,87,88,89,\
		90,91,92,93,94,95,96,97,98,99,\
		100,101,102,103,104,105,106,107,108,109,\
		110,111,112,113,114,115,116,117,118,119,\
		120,121,122,123,124,125,126,127,128,129,\
		130,131,132,133]).astype("uint32")

	ids=np.array([1,2,3,4,5,6,7,8,9,10,\
		11,12,13,14,15,16,17,18,24,25,\
		26,27,28,30,31,32,33,34,35,36,\
		37,39,40,41,42,43,44,45,46,47,\
		48,49,50,51,52,53,54,55,56,57,\
		58,59,60,61,62,63,64,65,66,67,\
		68,69,70,71,72,73,74,75,76,77,\
		78,79,80,81,82,83,84,85,86,87,\
		88,89,90,91,92,93,94,95,96,97,\
		98,99,100,101,102,103,104,105,106,107,\
		108,109,110,111,112,113,114,115,116,117,\
		118,119,120,121,122,123,124,125,126,127,\
		128,129,130,131,132,133]).astype("uint32")

	r=np.array([1.288733,1.288733,1.288733,0.899997,0.899997,0.899997,0.899997,0.899997,0.899997,0.899997,\
		0.899997,0.899997,0.899997,0.899997,0.899997,1.146770,1.146770,1.146770,1.486689,1.486689,\
		1.486689,2.711207,2.711207,2.434661,2.434661,1.800745,1.783996,1.817494,2.637931,2.650710,\
		2.625152,1.918661,1.918661,1.375022,1.320495,1.429549,1.420422,1.484460,1.356385,1.216850,\
		1.277210,1.156490,1.314111,1.349131,1.279091,1.325966,1.312992,1.338940,1.241105,1.216419,\
		1.265790,1.164832,1.166017,1.163647,1.297528,1.297528,1.066713,1.066713,1.020224,0.975888,\
		1.064560,0.978442,0.893845,1.063039,0.989218,1.014380,0.964056,1.042123,0.982456,1.101789,\
		0.965463,0.959488,0.971438,0.989399,1.042700,0.936098,0.974060,0.968984,0.979135,0.955457,\
		0.998675,0.961954,0.905742,1.122883,1.142415,1.103350,1.121407,1.193147,1.049666,1.126157,\
		1.204368,1.047947,1.008626,1.034058,0.983195,1.094444,1.076926,1.111962,1.078371,1.098716,\
		1.058026,1.028119,1.009531,1.046707,1.023089,1.065684,0.980495,0.957204,0.950955,0.963453,\
		0.962810,0.959570,0.966051,0.936096,0.998395,0.873797,0.953771,0.954466,0.953076,0.950549,\
		0.962043,0.939055,0.933362,0.919178,0.960137,0.920769]).astype("float")

	clr=np.array([[210,166,130,255],
		[210,166,130,255],
		[210,166,130,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,180,140,255],
		[210,171,133,255],
		[210,171,133,255],
		[210,171,133,255],
		[210,159,125,255],
		[210,159,125,255],
		[210,159,125,255],
		[211,116,94,255],
		[211,116,94,255],
		[211,125,101,254],
		[211,125,101,254],
		[210,148,117,255],
		[210,148,117,255],
		[210,147,117,255],
		[211,118,96,255],
		[211,118,96,255],
		[211,119,96,255],
		[211,144,114,255],
		[211,144,114,255],
		[210,163,128,255],
		[210,165,129,255],
		[210,161,126,255],
		[210,161,126,255],
		[210,159,125,255],
		[210,163,128,255],
		[210,168,132,255],
		[210,166,130,255],
		[210,170,133,255],
		[210,165,129,255],
		[210,164,128,255],
		[210,166,130,255],
		[210,164,129,255],
		[210,165,129,255],
		[210,164,129,255],
		[210,167,131,254],
		[210,168,132,254],
		[210,167,130,254],
		[210,170,133,255],
		[210,170,133,255],
		[210,170,133,254],
		[210,165,130,254],
		[210,165,130,254],
		[210,174,135,255],
		[210,174,135,255],
		[210,175,136,255],
		[210,177,138,255],
		[210,174,135,255],
		[210,177,138,255],
		[210,180,140,255],
		[210,174,135,255],
		[210,176,137,254],
		[210,175,137,255],
		[210,177,138,255],
		[210,174,136,255],
		[210,177,137,255],
		[210,172,134,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,176,137,255],
		[210,174,136,255],
		[210,178,139,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,178,138,255],
		[210,176,137,255],
		[210,177,138,255],
		[210,179,139,255],
		[210,172,134,255],
		[210,171,133,255],
		[210,172,134,255],
		[210,172,134,255],
		[210,169,132,255],
		[210,174,136,254],
		[210,172,134,254],
		[210,169,132,254],
		[210,174,136,255],
		[210,176,137,255],
		[210,175,136,255],
		[210,177,137,255],
		[210,173,135,255],
		[210,173,135,255],
		[210,172,134,255],
		[210,173,135,255],
		[210,172,135,255],
		[210,174,136,255],
		[210,175,136,255],
		[210,176,137,255],
		[210,174,136,255],
		[210,175,136,255],
		[210,174,135,255],
		[210,177,137,255],
		[210,177,138,255],
		[210,178,138,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,177,138,255],
		[210,178,139,255],
		[210,176,137,255],
		[210,180,140,255],
		[210,178,138,255],
		[210,178,138,255],
		[210,178,138,255],
		[210,178,138,255],
		[210,177,138,255],
		[210,178,139,255],
		[210,178,139,255],
		[210,179,139,254],
		[210,177,138,255],
		[210,179,139,255]]).astype("uint8")
	mdl=session.open_command.open_data("/Users/albertsmith/Documents/GitHub/POPC_frames_archive/pyDIFRATE/Struct/POPC.pdb_0.pdb")[0]
	session.models.add(mdl)
	rc(session,"~display")
	rc(session,"~ribbon")
	if len(session.models)>1:
		atoms=session.models[1].atoms
		rc(session,"display #1.1")
	else:
		atoms=session.models[0].atoms
		rc(session,"display #1")
	hide=getattr(atoms,"hides")
	hide[:]=1
	hide[di]=0
	setattr(atoms,"hides",hide)
	rc(session,"style ball")
	rc(session,"size stickRadius 0.2")
	rc(session,"color all tan")
	r0=getattr(atoms,"radii").copy()
	clr0=getattr(atoms,"colors").copy()
	r0[:]=.8
	r0[ids]=r
	clr0[ids]=clr
	setattr(atoms,"radii",r0)
	setattr(atoms,"colors",clr0)
	rc(session,"turn x -90")
	rc(session,"view all")
	rc(session,"set bgColor white")
	rc(session,"lighting soft")
except:
	pass
finally:
	os.remove("/Users/albertsmith/Documents/GitHub/POPC_frames_archive/pyDIFRATE/chimera/chimera_script616092.py")
